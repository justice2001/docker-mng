name: release
on:
  release:
    types:
      - created
jobs:
  build:
    runs-on: debian-12

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Node.js environment with Node.js 18.18.2
      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '18.18.2'

      # Set up pnpm environment
      - name: Set up pnpm environment
        uses: pnpm/action-setup@v2
        with:
          version: '8'

      - name: Prepare environment
        run: |
          chmod +x ./prepare.sh
          ./prepare.sh

      - name: Build daemon & panel
        run: |
          pnpm run build:daemon
          pnpm run build:panel
          pnpm run build:ui

      # Determine tag based on pre-release status and set version
      - name: Set Docker tag and version
        id: tag
        run: |
          if [ "${{ github.event.release.prerelease }}" = "true" ]; then
            echo "TAG=beta" >> $GITHUB_ENV
          else
            echo "TAG=latest" >> $GITHUB_ENV
          fi

      # Log in to Docker Registry
      - name: Log in to Docker Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.HUB_USERNAME }}
          password: ${{ secrets.HUB_PASSWORD }}

      - name: Build & push daemon image
        run: |
          docker build -f ./docker/daemon.Dockerfile \
            -t ${{ secrets.HUB_USERNAME }}/dm-daemon:${{ env.TAG }} \
            -t ${{ secrets.HUB_USERNAME }}/dm-daemon:${{ github.event.release.tag_name }} . --push
          docker build -f ./docker/panel.Dockerfile \
            -t ${{ secrets.HUB_USERNAME }}/dm-panel:${{ env.TAG }} \
            -t ${{ secrets.HUB_USERNAME }}/dm-panel:${{ github.event.release.tag_name }} . --push

      - name: Clean docker image
        run: |
          docker rmi ${{ secrets.HUB_USERNAME }}/dm-daemon:${{ env.TAG }}
          docker rmi ${{ secrets.HUB_USERNAME }}/dm-daemon:${{ github.event.release.tag_name }}
          docker rmi ${{ secrets.HUB_USERNAME }}/dm-panel:${{ env.TAG }}
          docker rmi ${{ secrets.HUB_USERNAME }}/dm-panel:${{ github.event.release.tag_name }}